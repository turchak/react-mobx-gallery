{"version":3,"sources":["components/Header/index.js","components/Footer/index.js","components/Album/index.js","components/SearchResults/index.js","containers/AppContainer.js","containers/RootContainer.js","store/index.js","serviceWorker.js","index.js","assets/img/gallery.svg"],"names":["Header","handleClick","ev","preventDefault","handleChange","search","_this","props","react","className","href","onClick","this","src","logo","alt","input_default","a","placeholder","view","size","onChange","React","inject","stores","appStore","observer","Footer","react_default","createElement","Album","state","images","isValid","updatePhotos","album","Promise","resolve","reject","photos","map","photo","img","Image","thumbnailUrl","onload","push","length","then","res","setState","prevProps","id","_this2","key","title","spin_default","visible","SearchResults","result","results","searchId","_this$state","App","setAlbumId","fetchData","_this$props","isLoading","selectOptions","searchResult","select_default","mode","hideTick","options","components_Album","components_SearchResults","albums","el","value","text","concat","part","getPart","RootContainer","Fragment","components_Header","AppContainer","components_Footer","AppStore","albumId","fetch","json","action","reduce","acc","val","url","catch","e","word","data","accumulator","includes","Object","objectSpread","toConsumableArray","Date","filter","decorate","observable","Boolean","window","location","hostname","match","ReactDOM","render","index_module","containers_RootContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.4af7f9b3.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { observer, inject } from 'mobx-react'\r\nimport Input from 'arui-feather/input'\r\nimport logo from '../../assets/img/gallery.svg'\r\nimport './styles.sass'\r\n\r\nclass Header extends React.Component {\r\n\r\n  handleClick = ev => {\r\n    ev.preventDefault()\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { search } = this.props\r\n    search(ev)\r\n  }\r\n\r\n  render() {\r\n    return  (\r\n      <header className=\"header\">\r\n        <a href=\"/\" className=\"logo\" onClick={this.handleClick}>\r\n          <img src={logo} className=\"logo__img\"alt=\"logo\"/>\r\n        </a>\r\n        <Input\r\n          placeholder='Search'\r\n          view='line'\r\n          size='l'\r\n          onChange={this.handleChange}\r\n        />\r\n      </header>\r\n    ) \r\n  }\r\n}\r\n\r\nexport default inject((stores) => ({\r\n    search: stores.appStore.search\r\n}))(observer(Header))","import React from 'react'\r\nimport './styles.sass'\r\n\r\nconst Footer = props => <footer className=\"footer\"></footer>\r\n\r\nexport default Footer","import * as React from 'react'\r\nimport Spin from 'arui-feather/spin'\r\nimport './styles.sass'\r\n\r\nclass Album extends React.Component {\r\n    state = {\r\n        images: [], \r\n        isValid: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updatePhotos()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(prevProps.album.id !== this.props.album.id) {\r\n            this.setState({ isValid: false })\r\n            this.updatePhotos()\r\n        }\r\n    }\r\n\r\n    updatePhotos = () => {\r\n        const { album } = this.props\r\n        const images = []\r\n        const promise = new Promise((resolve, reject) => {\r\n            album.photos.map(photo => {\r\n                const img = new Image(150, 150)\r\n                img.src = photo.thumbnailUrl\r\n                img.onload = () => {\r\n                    images.push(img)\r\n                        if(images.length === album.photos.length) {\r\n                            resolve(images)\r\n                        }\r\n                    }\r\n                return img\r\n                })\r\n            })\r\n        promise.then(res => this.setState({ isValid: true }))\r\n    }\r\n\r\n    render() {\r\n        const { album } = this.props\r\n        const { isValid } = this.state\r\n        if(isValid) {\r\n            return (\r\n              <React.Fragment>\r\n                <ul className=\"gallery\">\r\n                  {album.photos.map((photo) => (\r\n                    <li key={photo.id} className=\"gallery__item\" onClick={this.handleClick}>\r\n                      <img src={photo.thumbnailUrl} alt={photo.title} />\r\n                      <span className=\"gallery__title\">{photo.title}</span>\r\n                    </li>))\r\n                    }\r\n                </ul>\r\n              </React.Fragment>\r\n            )\r\n        }\r\n        return <Spin size='l' visible={true} className=\"loader\"/>\r\n    }\r\n}\r\n  \r\nexport default Album","import * as React from 'react'\r\nimport Spin from 'arui-feather/spin'\r\nimport './styles.sass'\r\n\r\nclass SearchResults extends React.Component {\r\n    state = {\r\n        images: [], \r\n        isValid: false,\r\n        result: null,\r\n    }\r\n    componentDidMount() {\r\n        this.updatePhotos()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { results } = this.props\r\n        if(prevProps.results.searchId !== results.searchId) {\r\n            this.updatePhotos()\r\n        }\r\n    }\r\n\r\n    updatePhotos = () => {\r\n        const { results } = this.props\r\n        if (results.photos.length === 0) {\r\n            return this.setState({\r\n                result: 'Not found'\r\n            })\r\n        }\r\n        \r\n        const images = []\r\n        const promise = new Promise((resolve, reject) => {\r\n            results.photos.map(photo => {\r\n                const img = new Image(150, 150)\r\n                img.src = photo.thumbnailUrl\r\n                img.onload = () => {\r\n                    images.push(img)\r\n                    if(images.length === results.photos.length) {\r\n                        resolve(images)\r\n                    }\r\n                }\r\n                return img\r\n            })\r\n        })\r\n        promise.then(res => this.setState({ isValid: true, result: null }))\r\n    }\r\n\r\n    render() {\r\n        const { results } = this.props\r\n        const { isValid, result } = this.state\r\n        if(result) {\r\n            return <span>{result}</span>\r\n        }\r\n        if(isValid) {\r\n            return (\r\n              <ul className=\"gallery\">\r\n                {results.photos.map((photo) => (\r\n                  <li key={photo.id} className=\"gallery__item\" onClick={this.handleClick}>\r\n                    <img src={photo.thumbnailUrl} alt={photo.title} />\r\n                    <span className=\"gallery__title\">{photo.title}</span>\r\n                  </li>))\r\n                  }\r\n              </ul>\r\n            )\r\n        }\r\n        return <Spin size='l' visible={true} className=\"loader\"/>\r\n    }\r\n    \r\n}\r\n\r\nexport default SearchResults","import * as React from 'react'\r\nimport Select from 'arui-feather/select'\r\nimport Spin from 'arui-feather/spin'\r\nimport { observer, inject } from 'mobx-react'\r\nimport Album from '../components/Album'\r\nimport SearchResults from '../components/SearchResults'\r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchData } = this.props\r\n    fetchData()\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { setAlbumId } = this.props\r\n    setAlbumId(ev[0])\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, selectOptions, isValid, album, searchResult } = this.props\r\n    if (!isValid) {\r\n      return isLoading ? <Spin size='l' visible={true} className=\"loader\"/> : null\r\n    }\r\n    return (\r\n      <main className=\"container\">\r\n        <Select\r\n          mode='radio-check'\r\n          hideTick={true}\r\n          placeholder='Choose Album'\r\n          options={selectOptions}\r\n          onChange={this.handleChange}\r\n          className=\"select\"\r\n        />\r\n        {album && !searchResult? <Album album={album} /> : null}\r\n        {searchResult ? <SearchResults results={searchResult} /> : null}\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default inject(stores => {\r\n  const selectOptions = stores.appStore.photos.albums.map(el => ({ value: el.id, text: `Album - #${ el.id }` }))\r\n    return {\r\n        isLoading: stores.appStore.isLoading,\r\n        searchResult: stores.appStore.searchResult,\r\n        fetchData: stores.appStore.fetchData,\r\n        setAlbumId: stores.appStore.setAlbumId,\r\n        album: stores.appStore.album,\r\n        photos: stores.appStore.photos.albums,\r\n        isValid: stores.appStore.isValid,\r\n        part: stores.appStore.part,\r\n        getPart: stores.appStore.getPart,\r\n        selectOptions\r\n    }\r\n})(observer(App))\r\n","import React from 'react'\r\nimport Header from '../components/Header'\r\nimport Footer from '../components/Footer'\r\nimport App from './AppContainer'\r\n\r\nconst RootContainer = props => (\r\n  <React.Fragment>\r\n    <Header />\r\n    <App />\r\n    <Footer />\r\n  </React.Fragment>\r\n) \r\n\r\nexport default RootContainer","import { observable, action, decorate  } from 'mobx'\r\n\r\nclass AppStore {\r\n  photos = { albums: [] };\r\n  isLoading = false;\r\n  isValid = false;\r\n  albumId = null;\r\n  album = null;\r\n  searchResult: null;\r\n  \r\n  fetchData = () => {\r\n    this.isLoading = true\r\n    fetch('https://jsonplaceholder.typicode.com/photos')\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      action(() => {\r\n        this.photos = json.reduce((acc, val) => {\r\n          if(!acc.albums.length) {\r\n            acc.albums.push({ id: val.albumId })\r\n            acc.albums[acc.albums.length-1].photos = []\r\n          }\r\n          if (acc.albums[acc.albums.length-1].id !== val.albumId) {\r\n            acc.albums.push({ id: val.albumId })\r\n            acc.albums[acc.albums.length-1].photos = []\r\n          }\r\n          acc.albums[acc.albums.length-1].photos.push({ id: val.id, url: val.url,  title: val.title, thumbnailUrl: val.thumbnailUrl })\r\n          return acc\r\n        }, {\r\n          albums: []\r\n        })\r\n        this.isLoading = false\r\n        this.isValid = true\r\n      })()\r\n    }).catch(e => {\r\n      this.isLoading = false\r\n    })\r\n  }\r\n\r\n  search = word => {\r\n    if (word.length <= 2) {\r\n      this.searchResult = null\r\n      return \r\n    }\r\n    const result = this.photos.albums.reduce((acc, val) => {\r\n      const data = val.photos.reduce((accumulator, value) => {\r\n        if(value.title.includes(word)) {\r\n          accumulator.push(value)\r\n          return accumulator\r\n        }\r\n        return accumulator\r\n      }, [])\r\n      return {...acc, photos: [ ...acc.photos, ...data ]}\r\n    }, {searchId: +new Date(), photos: []})\r\n    this.searchResult = result\r\n  }\r\n\r\n  setAlbumId = id => {\r\n    this.albumId = id\r\n    this.searchResult = null\r\n    this.album = this.photos.albums.filter(album => album.id === id)[0]\r\n  }\r\n}\r\ndecorate(AppStore, {\r\n    searchResult: observable,\r\n    albumId: observable,\r\n    album: observable,\r\n    isValid: observable,\r\n    photos: observable,\r\n    isLoading: observable,\r\n    fetchData: action,\r\n    search: action\r\n})\r\n\r\nconst appStore = new AppStore()\r\n\r\nexport default appStore\r\nexport { appStore }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider, propTypes } from 'mobx-react'\r\nimport RootContainer from './containers/RootContainer'\r\nimport appStore from './store'\r\nimport './index.sass'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nconst stores = { appStore }\r\n\r\nReactDOM.render(\r\n  <Provider {...stores}>\r\n    <RootContainer />\r\n  </Provider>, document.getElementById('root'))\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/gallery.f84c4cf2.svg\";"],"sourceRoot":""}